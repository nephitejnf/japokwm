#ifndef LIB_COLOR_H
#define LIB_COLOR_H

#include <lua.h>
#include <lauxlib.h>

// static methods
void lua_load_color(lua_State *L);
int lib_color_new(lua_State *L);

struct color check_color(lua_State *L, int narg);

// static setters
// static getters

// we have so many default colors, and this is the only sane way to do it
// this macro should be used for all colors in the header file
# define COLOR_GETTER_PROTOTYPE(name) \
    int lib_color_get_##name(lua_State *L)
// this macro should be used for all color getters in the source file
# define COLOR_GETTER(name) \
    int lib_color_get_##name(lua_State *L) \
    { \
        struct color color = name; \
        create_lua_color(L, color); \
        return 1; \
    }
// macro to register a color
#define REGISTER_COLOR(name) \
    {#name, lib_color_get_##name}

COLOR_GETTER_PROTOTYPE(AQUA);
COLOR_GETTER_PROTOTYPE(AQUAMARINE);
COLOR_GETTER_PROTOTYPE(AZURE);
COLOR_GETTER_PROTOTYPE(BEIGE);
COLOR_GETTER_PROTOTYPE(BISQUE);
COLOR_GETTER_PROTOTYPE(BLACK);
COLOR_GETTER_PROTOTYPE(BLANCHEDALMOND);
COLOR_GETTER_PROTOTYPE(BLUE);
COLOR_GETTER_PROTOTYPE(BLUEVIOLET);
COLOR_GETTER_PROTOTYPE(BROWN);
COLOR_GETTER_PROTOTYPE(BURLYWOOD);
COLOR_GETTER_PROTOTYPE(CADETBLUE);
COLOR_GETTER_PROTOTYPE(CHARTREUSE);
COLOR_GETTER_PROTOTYPE(CHOCOLATE);
COLOR_GETTER_PROTOTYPE(CORAL);
COLOR_GETTER_PROTOTYPE(CORNSILK);
COLOR_GETTER_PROTOTYPE(CRIMSON);
COLOR_GETTER_PROTOTYPE(DARKBLUE);
COLOR_GETTER_PROTOTYPE(DARKCYAN);
COLOR_GETTER_PROTOTYPE(DARKGOLDENROD);
COLOR_GETTER_PROTOTYPE(DARKGRAY);
COLOR_GETTER_PROTOTYPE(DARKGREEN);
COLOR_GETTER_PROTOTYPE(DARKKHAKI);
COLOR_GETTER_PROTOTYPE(DARKMAGENTA);
COLOR_GETTER_PROTOTYPE(DARKOLIVEGREEN);
COLOR_GETTER_PROTOTYPE(DARKORANGE);
COLOR_GETTER_PROTOTYPE(DARKORCHID);
COLOR_GETTER_PROTOTYPE(DARKRED);
COLOR_GETTER_PROTOTYPE(DARKSALMON);
COLOR_GETTER_PROTOTYPE(DARKSEAGREEN);
COLOR_GETTER_PROTOTYPE(DARKSLATEBLUE);
COLOR_GETTER_PROTOTYPE(DARKSLATEGRAY);
COLOR_GETTER_PROTOTYPE(DARKTURQUOISE);
COLOR_GETTER_PROTOTYPE(DARKVIOLET);
COLOR_GETTER_PROTOTYPE(DEEPPINK);
COLOR_GETTER_PROTOTYPE(DEEPSKYBLUE);
COLOR_GETTER_PROTOTYPE(DIMGRAY);
COLOR_GETTER_PROTOTYPE(DODGERBLUE);
COLOR_GETTER_PROTOTYPE(FIREBRICK);
COLOR_GETTER_PROTOTYPE(FLORALWHITE);
COLOR_GETTER_PROTOTYPE(FORESTGREEN);
COLOR_GETTER_PROTOTYPE(FUCHSIA);
COLOR_GETTER_PROTOTYPE(GAINSBORO);
COLOR_GETTER_PROTOTYPE(GHOSTWHITE);
COLOR_GETTER_PROTOTYPE(GOLD);
COLOR_GETTER_PROTOTYPE(GOLDENROD);
COLOR_GETTER_PROTOTYPE(GRAY);
COLOR_GETTER_PROTOTYPE(GREEN);
COLOR_GETTER_PROTOTYPE(GREENYELLOW);
COLOR_GETTER_PROTOTYPE(HONEYDEW);
COLOR_GETTER_PROTOTYPE(HOTPINK);
COLOR_GETTER_PROTOTYPE(INDIANRED);
COLOR_GETTER_PROTOTYPE(INDIGO);
COLOR_GETTER_PROTOTYPE(IVORY);
COLOR_GETTER_PROTOTYPE(KHAKI);
COLOR_GETTER_PROTOTYPE(LAVENDER);
COLOR_GETTER_PROTOTYPE(LAVENDERBLUSH);
COLOR_GETTER_PROTOTYPE(LAWNGREEN);
COLOR_GETTER_PROTOTYPE(LEMONCHIFFON);
COLOR_GETTER_PROTOTYPE(LIGHTBLUE);
COLOR_GETTER_PROTOTYPE(LIGHTCORAL);
COLOR_GETTER_PROTOTYPE(LIGHTCYAN);
COLOR_GETTER_PROTOTYPE(LIGHTGOLDENRODYELLOW);
COLOR_GETTER_PROTOTYPE(LIGHTGRAY);
COLOR_GETTER_PROTOTYPE(LIGHTGREEN);
COLOR_GETTER_PROTOTYPE(LIGHTPINK);
COLOR_GETTER_PROTOTYPE(LIGHTSALMON);
COLOR_GETTER_PROTOTYPE(LIGHTSEAGREEN);
COLOR_GETTER_PROTOTYPE(LIGHTSKYBLUE);
COLOR_GETTER_PROTOTYPE(LIGHTSLATEGRAY);
COLOR_GETTER_PROTOTYPE(LIGHTSTEELBLUE);
COLOR_GETTER_PROTOTYPE(LIGHTYELLOW);
COLOR_GETTER_PROTOTYPE(LIME);
COLOR_GETTER_PROTOTYPE(LIMEGREEN);
COLOR_GETTER_PROTOTYPE(LINEN);
COLOR_GETTER_PROTOTYPE(MAGENTA);
COLOR_GETTER_PROTOTYPE(MAROON);
COLOR_GETTER_PROTOTYPE(MEDIUMAQUAMARINE);
COLOR_GETTER_PROTOTYPE(MEDIUMBLUE);
COLOR_GETTER_PROTOTYPE(MEDIUMORCHID);
COLOR_GETTER_PROTOTYPE(MEDIUMPURPLE);
COLOR_GETTER_PROTOTYPE(MEDIUMSEAGREEN);
COLOR_GETTER_PROTOTYPE(MEDIUMSLATEBLUE);
COLOR_GETTER_PROTOTYPE(MEDIUMSPRINGGREEN);
COLOR_GETTER_PROTOTYPE(MEDIUMTURQUOISE);
COLOR_GETTER_PROTOTYPE(MEDIUMVIOLETRED);
COLOR_GETTER_PROTOTYPE(MIDNIGHTBLUE);
COLOR_GETTER_PROTOTYPE(MINTCREAM);
COLOR_GETTER_PROTOTYPE(MISTYROSE);
COLOR_GETTER_PROTOTYPE(MOCCASIN);
COLOR_GETTER_PROTOTYPE(NAVAJOWHITE);
COLOR_GETTER_PROTOTYPE(NAVY);
COLOR_GETTER_PROTOTYPE(OLDLACE);
COLOR_GETTER_PROTOTYPE(OLIVE);
COLOR_GETTER_PROTOTYPE(OLIVEDRAB);
COLOR_GETTER_PROTOTYPE(ORANGE);
COLOR_GETTER_PROTOTYPE(ORANGERED);
COLOR_GETTER_PROTOTYPE(ORCHID);
COLOR_GETTER_PROTOTYPE(PALEGOLDENROD);
COLOR_GETTER_PROTOTYPE(PALEGREEN);
COLOR_GETTER_PROTOTYPE(PALETURQUOISE);
COLOR_GETTER_PROTOTYPE(PALEVIOLETRED);
COLOR_GETTER_PROTOTYPE(PAPAYAWHIP);
COLOR_GETTER_PROTOTYPE(PEACHPUFF);
COLOR_GETTER_PROTOTYPE(PERU);
COLOR_GETTER_PROTOTYPE(PINK);
COLOR_GETTER_PROTOTYPE(PLUM);
COLOR_GETTER_PROTOTYPE(POWDERBLUE);
COLOR_GETTER_PROTOTYPE(PURPLE);
COLOR_GETTER_PROTOTYPE(RED);
COLOR_GETTER_PROTOTYPE(ROSYBROWN);
COLOR_GETTER_PROTOTYPE(ROYALBLUE);
COLOR_GETTER_PROTOTYPE(SADDLEBROWN);
COLOR_GETTER_PROTOTYPE(SALMON);
COLOR_GETTER_PROTOTYPE(SANDYBROWN);
COLOR_GETTER_PROTOTYPE(SEAGREEN);
COLOR_GETTER_PROTOTYPE(SEASHELL);
COLOR_GETTER_PROTOTYPE(SIENNA);
COLOR_GETTER_PROTOTYPE(SILVER);
COLOR_GETTER_PROTOTYPE(SKYBLUE);
COLOR_GETTER_PROTOTYPE(SLATEBLUE);
COLOR_GETTER_PROTOTYPE(SLATEGRAY);
COLOR_GETTER_PROTOTYPE(SLATEGREY);
COLOR_GETTER_PROTOTYPE(SNOW);
COLOR_GETTER_PROTOTYPE(SPRINGGREEN);
COLOR_GETTER_PROTOTYPE(STEELBLUE);
COLOR_GETTER_PROTOTYPE(TAN);
COLOR_GETTER_PROTOTYPE(TEAL);
COLOR_GETTER_PROTOTYPE(THISTLE);
COLOR_GETTER_PROTOTYPE(TOMATO);
COLOR_GETTER_PROTOTYPE(TURQUOISE);
COLOR_GETTER_PROTOTYPE(VIOLET);
COLOR_GETTER_PROTOTYPE(WHEAT);
COLOR_GETTER_PROTOTYPE(WHITE);
COLOR_GETTER_PROTOTYPE(WHITESMOKE);
COLOR_GETTER_PROTOTYPE(YELLOW);
COLOR_GETTER_PROTOTYPE(YELLOWGREEN);

#endif /* LIB_COLOR_H */
